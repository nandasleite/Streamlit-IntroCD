import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

st.set_page_config(
    page_title = "Miss√µes Espaciais",
    page_icon = ":bar_chart:",
    layout = "wide"
)

# ------------------------------------

st.sidebar.subheader("üöÄ")
st.sidebar.subheader("An√°lise Explorat√≥ria dos Dados de Miss√µes Espaciais")
st.sidebar.write("Este permite explorar dados de miss√µes espaciais, incluindo informa√ß√µes sobre empresas, locais de lan√ßamento, datas e status das miss√µes, de 1957 a 2020.")
st.sidebar.markdown("**Fernanda Leite e Maria Fernanda**")

# ------------------------------------

# Carregamento dos dados
@st.cache_data
def load_data():
    df = pd.read_csv("data/space_missions.csv")
    
    # Remove colunas desnecess√°rias
    df.drop(columns=['Unnamed: 0', 'Unnamed: 0.1'], inplace=True)
    # Cria a coluna 'Country'
    df['Country'] = df['Location'].str.split(',').str[-1].str.strip()
    # Ajusta nomes de pa√≠ses
    replace_dict = {
        'Barents Sea': 'Russia',
        'Gran Canaria': 'Spain',
        'Shahrud Missile Test Site': 'Iran',
        'Yellow Sea': 'Russia',
        'Pacific Missile Range Facility': 'USA',
        'Pacific Ocean': 'USA'
    }
    df['Country'] = df['Country'].replace(replace_dict)
    # Processa a coluna 'Datum'
    df['Datum'] = df['Datum'].str.split(' ').str[:4].str.join(' ')
    df[['Weekday', 'Date']] = df['Datum'].str.split(' ', n=1, expand=True)
    df.drop(columns=['Datum'], inplace=True)
    df['Weekday'] = df['Weekday'].str.strip()
    df['Date'] = df['Date'].str.strip()
    df['Date'] = pd.to_datetime(df['Date'])
    # Cria a coluna 'Mission Status' para categorizar as miss√µes
    df['Mission Status'] = df['Status Mission'].apply(lambda x: 'Success' if x == 'Success' else 'Failure')
    # Renomeia a coluna ' Rocket' para 'Mission Cost'
    df.rename(columns={' Rocket': 'Mission Cost'}, inplace=True)
    # Converte a coluna 'Mission Cost' para num√©rica
    df['Mission Cost'] = pd.to_numeric(df['Mission Cost'].str.replace(r'[^\d.]', '', regex=True), errors='coerce')
    # Em StatusRocket, remover a palavra Status
    df['Status Rocket'] = df['Status Rocket'].str.replace('Status', '', regex=False)
    
    return df

df = load_data()

# ------------------------------------
# Textos descritivos

# Pa√≠ses
grafico1 = 'Este gr√°fico resume a contribui√ß√£o hist√≥rica acumulada de cada na√ß√£o para a atividade de lan√ßamento. A R√∫ssia (ex-URSS) e os EUA dominam a lista com 1399 e 1381 lan√ßamentos, respectivamente, reafirmando sua primazia hist√≥rica e o impacto da Guerra Fria na acelera√ß√£o das miss√µes espaciais. O Cazaquist√£o (701) aparece em terceiro devido ao uso do Cosm√≥dromo de Baikonur, a primeira e maior base de lan√ßamentos de foguetes do mundo. A Fran√ßa e a China seguem com n√∫meros significativos (303 e 268), destacando suas capacidades espaciais bem estabelecidas, enquanto Jap√£o e √çndia tamb√©m mostram um n√∫mero consider√°vel. A presen√ßa de Ir√£, Nova Zel√¢ndia e Israel com volumes menores indica a expans√£o do "clube espacial" para incluir pa√≠ses com programas mais recentes ou de nicho. Este gr√°fico √© uma representa√ß√£o concisa da concentra√ß√£o de capacidade de lan√ßamento espacial nas m√£os de poucas pot√™ncias ao longo da hist√≥ria.'

# Ano
grafico2 = 'O gr√°fico oferece uma perspectiva hist√≥rica sobre a frequ√™ncia dos lan√ßamentos. Observa-se um r√°pido crescimento nos anos 1960 e 1970, impulsionado pela corrida espacial entre EUA e URSS, com picos significativos por volta de 1967-1968 e novamente em meados dos anos 1970 (1975-1976), quando ambos os pa√≠ses realizavam dezenas de lan√ßamentos anuais. Ap√≥s esses picos, houve uma ligeira diminui√ß√£o na frequ√™ncia nos anos 1980 e 1990, e uma estabiliza√ß√£o nos anos 2000. No entanto, a d√©cada de 2010 mostra um ressurgimento not√°vel no n√∫mero de lan√ßamentos, com um novo pico em 2018 (quase 120 lan√ßamentos), impulsionado pela ascens√£o de novos players como a China, o crescimento de empresas privadas e o aumento da demanda por servi√ßos de lan√ßamento de sat√©lites, indicando uma nova era de expans√£o espacial.'

# M√™s
grafico3 = 'O gr√°fico revela uma distribui√ß√£o relativamente uniforme de lan√ßamentos ao longo do ano, com uma leve tend√™ncia de aumento no final do ano. Dezembro se destaca como o m√™s com o maior n√∫mero de lan√ßamentos (450), seguido de perto por abril, junho e outubro. Essa distribui√ß√£o sugere que n√£o h√° sazonalidade clim√°tica ou operacional r√≠gida que concentre lan√ßamentos em apenas alguns meses, indicando que as janelas de lan√ßamento s√£o aproveitadas de forma consistente, possivelmente otimizando o uso das infraestruturas e atendendo a demandas de √≥rbita espec√≠ficas ou a prazos de projetos que se estendem ao longo de todo o ano.'

# Dia da semana
grafico4 = 'Este gr√°fico demonstra a frequ√™ncia de lan√ßamentos espaciais distribu√≠da pelos dias da semana. Notavelmente, a maioria dos lan√ßamentos ocorre nos dias √∫teis, com quartas, quintas e sextas-feiras apresentando o maior n√∫mero de atividades. H√° uma queda acentuada nos lan√ßamentos durante os fins de semana, especialmente aos domingos, que mostram a menor quantidade. Essa distribui√ß√£o reflete as opera√ß√µes t√≠picas de uma ind√∫stria que segue um cronograma de trabalho padronizado, onde a disponibilidade de equipes, infraestrutura e apoio t√©cnico √© maior durante a semana comercial, priorizando a efici√™ncia e coordena√ß√£o das opera√ß√µes.'

# Empresa
grafico5 = 'O gr√°fico destaca a esmagadora contribui√ß√£o hist√≥rica da RVSN URSS (For√ßas de Foguetes Estrat√©gicos da Uni√£o Sovi√©tica) com 1777 lan√ßamentos, um n√∫mero muito superior ao de qualquer outra entidade, reiterando o papel central da Uni√£o Sovi√©tica na corrida espacial e na explora√ß√£o inicial. A grande lacuna para a segunda colocada, Arianespace (279), e outras empresas como General Dynamics (251) e CASC (251), demonstra a magnitude do esfor√ßo espacial sovi√©tico. A presen√ßa de entidades militares como a US Air Force (161) e a VKS RF (201) (For√ßas Aeroespaciais Russas) sublinha a natureza frequentemente dual, civil e militar, das opera√ß√µes espaciais. A NASA (203) e empresas aeroespaciais tradicionais como Boeing (136), ULA (140) e Martin Marietta (114) tamb√©m aparecem, mostrando a diversidade de atores que contribu√≠ram para a hist√≥ria dos lan√ßamentos espaciais. '

# Pizza - Status das Miss√µes
grafico6 = 'O gr√°fico de pizza acima oferece uma vis√£o consolidada da propor√ß√£o de sucessos e falhas em todas as miss√µes. Ele revela que a vasta maioria das miss√µes espaciais, 89.7%, foi bem-sucedida, enquanto apenas 10.3% resultaram em falha. Essa alta taxa de sucesso global ressalta a maturidade e a confiabilidade das tecnologias de lan√ßamento, mesmo considerando a complexidade inerente de enviar objetos ao espa√ßo. √â um testemunho da dedica√ß√£o e precis√£o exigidas na engenharia espacial ao longo das d√©cadas desde o in√≠cio da era espacial. '

# Razao de sucesso por ano
grafico7 = 'Este gr√°fico ilustra a evolu√ß√£o da taxa de sucesso das miss√µes espaciais desde 1957. Observa-se que, nas primeiras d√©cadas da explora√ß√£o espacial (final dos anos 1950 e in√≠cio dos anos 1960), a taxa de sucesso era consideravelmente baixa, com picos de apenas 20% em 1958, refletindo os desafios e a natureza experimental dos primeiros lan√ßamentos. Contudo, houve um r√°pido aprendizado e aprimoramento tecnol√≥gico, levando a um aumento constante na taxa de sucesso, que se estabilizou em patamares elevados, geralmente acima de 90%, a partir dos anos 1970. Embora haja pequenas flutua√ß√µes e algumas quedas pontuais (como em meados dos anos 80 e 90, que podem coincidir com acidentes not√≥rios como o desastre do Challenger ou falhas de foguetes), a tend√™ncia geral √© de alta confiabilidade nas √∫ltimas d√©cadas, demonstrando a maturidade e o avan√ßo da engenharia aeroespacial.'

# Sucesso x fracasso por ano
grafico8 = 'O gr√°fico apresenta a rela√ß√£o entre lan√ßamentos espaciais e o status das miss√µes (sucesso ou falha) por ano, de 1957 a 2020. Observa-se um aumento significativo no n√∫mero de lan√ßamentos a partir da d√©cada de 1960, com picos not√°veis durante a corrida espacial (d√©cadas de 1960 e 1970), especialmente entre 1975 e 1977, quando os lan√ßamentos ultrapassaram 100 por ano, com predomin√¢ncia de miss√µes bem-sucedidas (barras verdes). A partir da d√©cada de 1980, o n√∫mero de lan√ßamentos diminuiu e se manteve relativamente est√°vel at√© o in√≠cio dos anos 2010, quando houve novo crescimento, atingindo outro pico em 2018. Ao longo do tempo, percebe-se uma tend√™ncia clara de aumento da taxa de sucesso, com a quantidade de falhas (barras vermelhas) diminuindo significativamente, evidenciando o avan√ßo tecnol√≥gico e a maior confiabilidade dos lan√ßamentos espaciais ao longo das d√©cadas. '

# Top 10 Pa√≠ses com mais lan√ßamentos bem-sucedidos
grafico9 = 'Observa-se que a R√∫ssia e os EUA lideram com 1303 e 1219 lan√ßamentos bem-sucedidos, respectivamente, o que reflete a vasta infraestrutura de lan√ßamento que esses pa√≠ses constru√≠ram. O Cazaquist√£o, novamente, aparece em terceiro lugar com 608 lan√ßamentos bem-sucedidos, reafirmando a import√¢ncia do Cosm√≥dromo de Baikonur como um dos locais mais ativos e bem-sucedidos na hist√≥ria dos lan√ßamentos espaciais. A Fran√ßa e a China seguem com n√∫meros significativos (285 e 243, respectivamente), mostrando a relev√¢ncia de seus pr√≥prios locais de lan√ßamento. A inclus√£o de "New Zealand" e "Kenya" pode indicar locais de lan√ßamento flutuantes ou instala√ß√µes costeiras usadas para trajet√≥rias espec√≠ficas, ou ainda a emerg√™ncia de novos players com menor volume, como a Nova Zel√¢ndia com o Rocket Lab.'

# Status das Miss√µes por Pa√≠s
grafico10 = 'O gr√°fico mostra a distribui√ß√£o de sucessos e falhas por na√ß√£o. A R√∫ssia (ex-URSS) e os EUA, os dois maiores players hist√≥ricos, apresentam o maior n√∫mero de lan√ßamentos bem-sucedidos (1306 e 1219, respectivamente) e tamb√©m as maiores contagens de falhas (93 e 162, respectivamente). A propor√ß√£o de falhas para os EUA √© um pouco maior que a da R√∫ssia em rela√ß√£o ao volume total de lan√ßamentos, mas ambos os pa√≠ses demonstram uma alta taxa de sucesso. O Cazaquist√£o, embora n√£o seja um pa√≠s com capacidade prim√°ria de desenvolvimento de foguetes, possui um volume consider√°vel de lan√ßamentos a partir de seu territ√≥rio (608 sucessos e 93 falhas), novamente refor√ßando seu papel como uma importante base de lan√ßamento. Pa√≠ses como Fran√ßa, China, Jap√£o e √çndia tamb√©m exibem taxas de sucesso elevadas, consolidando suas posi√ß√µes como pot√™ncias espaciais com capacidades de lan√ßamento robustas.'

# Pizza - Situa√ß√£o dos Foguetes
grafico11 = 'O gr√°fico oferece uma vis√£o geral concisa do estado da frota de foguetes, indicando que uma vasta maioria, 81.7%, est√° "Aposentada" (Retired), enquanto apenas 18.3% est√£o "Ativos" (Active). Essa distribui√ß√£o √© esperada, dada a natureza de uma atividade que se estende por d√©cadas desde 1957; a maioria dos foguetes constru√≠dos e lan√ßados ao longo da hist√≥ria naturalmente n√£o est√° mais em opera√ß√£o. Isso refor√ßa a import√¢ncia da manuten√ß√£o e desenvolvimento cont√≠nuo de novas tecnologias de lan√ßamento para sustentar a atividade espacial, e tamb√©m reflete a desativa√ß√£o de tecnologias antigas e a transi√ß√£o para sistemas mais eficientes e modernos '

# Top 10 Pa√≠ses com mais Foguetes Ativos
grafico12 = 'Este gr√°fico revela uma mudan√ßa not√°vel na lideran√ßa espacial atual em compara√ß√£o com o hist√≥rico de foguetes aposentados. Atualmente, a China lidera com 223 foguetes ativos, superando os EUA (208) e a Fran√ßa (113). Essa domin√¢ncia chinesa reflete seus investimentos massivos e o r√°pido avan√ßo de seu programa espacial nas √∫ltimas d√©cadas, posicionando-a como uma for√ßa crescente no cen√°rio espacial global. A presen√ßa do "Oceano Pac√≠fico" e "Nova Zel√¢ndia" na lista sugere o papel de locais de lan√ßamento ou de pequenas na√ß√µes que est√£o ganhando relev√¢ncia em nichos espec√≠ficos, como o lan√ßamento de pequenos sat√©lites, muitas vezes por meio de empresas privadas. A R√∫ssia, que dominava a contagem de foguetes aposentados, aparece mais abaixo na lista de ativos (36), indicando uma reconfigura√ß√£o do cen√°rio de poder espacial, onde a China e os EUA se destacam na vanguarda das opera√ß√µes ativas.'

# Top 10 Pa√≠ses com mais Foguetes Aposentados
grafico13 = 'O gr√°fico apresenta os 10 pa√≠ses com o maior n√∫mero de foguetes aposentados, ou seja, que j√° n√£o est√£o mais em uso. A R√∫ssia lidera com folga, totalizando 1.359 foguetes aposentados, seguida pelos Estados Unidos, com 1.136, e Cazaquist√£o, com 657. Esses tr√™s pa√≠ses possuem um hist√≥rico significativo de lan√ßamentos espaciais, o que explica a quantidade elevada de foguetes desativados. Em seguida aparecem Fran√ßa (190), Jap√£o (88) e China (45). Os √∫ltimos colocados s√£o √çndia (26), Qu√™nia (9), Israel (6) e Austr√°lia (6), demonstrando uma participa√ß√£o mais modesta nas atividades espaciais. O gr√°fico destaca o dom√≠nio hist√≥rico de algumas na√ß√µes no setor aeroespacial, especialmente durante e ap√≥s a Guerra Fria.'

# Custo M√©dio das Miss√µes Espaciais por Pa√≠s
grafico14 = 'O gr√°fico indica que o Cazaquist√£o apresenta o custo m√©dio mais alto por miss√£o (aproximadamente $264 USD), seguido por EUA (aproximadamente $216 USD) e Fran√ßa (aproximadamente $171 USD). O elevado custo m√©dio para o Cazaquist√£o, que abriga o Cosm√≥dromo de Baikonur, sugere que as opera√ß√µes a partir deste local, frequentemente de grande porte e complexidade, contribuem para esse valor. A presen√ßa de "Gran Canaria" e "Pacific Missile Range Facility" pode se referir a instala√ß√µes de rastreamento ou apoio a miss√µes, n√£o necessariamente pa√≠ses lan√ßadores. Notavelmente, R√∫ssia e China, apesar de serem grandes players em n√∫mero de lan√ßamentos, aparecem com custos m√©dios significativamente mais baixos ($40.54 e $40.27, respectivamente), o que pode refletir metodologias de custo diferentes, uma maior padroniza√ß√£o de lan√ßadores ou uma pol√≠tica de pre√ßos distinta.'

# Custo M√©dio das Miss√µes Espaciais por Empresa
grafico15 = 'Este gr√°fico mostra uma disparidade gritante, com a RVSN URSS liderando com um custo m√©dio de $5000 USD por miss√£o, valor consideravelmente superior ao de qualquer outra entidade. Essa cifra elevad√≠ssima para a RVSN URSS pode ser um reflexo dos vastos recursos investidos no desenvolvimento de foguetes e m√≠sseis intercontinentais durante a Guerra Fria, onde a performance e a capacidade eram priorizadas sobre a economia, ou talvez uma inclus√£o de custos de desenvolvimento que n√£o s√£o compar√°veis com outras empresas. A NASA aparece em segundo lugar, mas com um custo m√©dio muito inferior (aproximadamente $511 USD), seguida por empresas como Boeing ($177 USD), Arianespace ($170 USD) e ULA ($151 USD). A JAXA (Ag√™ncia de Explora√ß√£o Aeroespacial do Jap√£o) e a US Air Force tamb√©m apresentam custos m√©dios mais baixos, indicando que, fora o caso hist√≥rico da RVSN URSS, o custo m√©dio por miss√£o para as demais grandes ag√™ncias e empresas √© substancialmente menor e mais nivelado.'

# ------------------------------------

with st.sidebar.expander("Dicion√°rio de Dados", expanded=False, icon=":material/book:"):
    st.caption("""	
    - **Company Name:** Coluna que apresenta os nomes das empresas que realizaram miss√µes espaciais. Possui 4.324 registros n√£o-nulos;
    - **Location:** Coluna que apresenta os locais onde os lan√ßamentos foram realizados. Possui 4.324 registros n√£o-nulos;
    - **Datum:** Coluna que apresenta as datas e os hor√°rios dos lan√ßamentos. Possui 4.324 registros n√£o-nulos;
    - **Detail:** Coluna que apresenta o nome do foguete. Possui 4.234 registros n√£o-nulos;
    - **Rocket:** Coluna que apresenta o custo da miss√£o em milh√µes de d√≥lares. Possui 964 registrolos n√£o-nulos;
    - **Status:** Coluna que apresenta a situa√ß√£o da miss√£o como Sucedida ou Fracassada. Possui 4.324 registros n√£o-nulos;            
    """)


# ------------------------------------

with st.container(border=True):
    
    tab1, tab2, tab3, tab4, tab5, tab6 = st.tabs(["üåé Pa√≠s", "üìÖ Data", "üè¶ Empresa", "‚≠ê Miss√£o", "üöÄ Foguete", "ü§ë Custo"])

    with tab1:
        st.subheader("üåé Pa√≠ses com mais miss√µes espaciais")
        
        # Gr√°fico de barras
        country_counts = df['Country'].value_counts().reset_index()
        country_counts.columns = ['Country', 'Mission Count']

        fig = px.bar(country_counts, x='Country', y='Mission Count', color='Mission Count',
                    text='Mission Count')
        fig.update_layout(xaxis_title='Pa√≠s', yaxis_title='N√∫mero de Miss√µes')
        st.plotly_chart(fig, use_container_width=True)

        with st.expander("Informa√ß√µes sobre os Pa√≠ses", expanded=False, icon=":material/info:"):
            st.caption(f"{grafico1}")
    

    with tab2:
        st.subheader("üìÖ Miss√µes espaciais por ano")

        col1, col2 = st.columns(2)
        with col1:
            with st.container(border=True):
                st.metric(label="Maior quantidade de lan√ßamentos", value="1971")
        with col2:
            with st.container(border=True):
                ano_menor_lancamentos = df['Date'].dt.year.value_counts().idxmin()
                st.metric(label="Menor quantidade de lan√ßamentos", value=ano_menor_lancamentos)

        # Gr√°fico com o n√∫mero de lan√ßamentos por ano, individualizando os anos
        fig_ano = px.bar(df['Date'].dt.year.value_counts().sort_index(), 
                        x=df['Date'].dt.year.value_counts().sort_index().index, 
                        y=df['Date'].dt.year.value_counts().sort_index().values,
                        labels={'x': 'Ano', 'y': 'N√∫mero de Lan√ßamentos'})
        fig_ano.update_layout(xaxis_title='Ano', yaxis_title='N√∫mero de Lan√ßamentos')
        # Separa as barras
        fig_ano.update_traces(marker=dict(line=dict(width=1, color='DarkSlateGrey')))
        fig_ano.update_xaxes(dtick="M12", tickformat="%Y")  # Formata o eixo x para mostrar apenas o ano
        st.plotly_chart(fig_ano, use_container_width=True)

        with st.expander("An√°lise do Gr√°fico", expanded=False, icon=":material/info:"):
            st.caption(f"{grafico2}")


        st.markdown("---")
        st.subheader("üìÖ Miss√µes espaciais por m√™s")

        # Gr√°fico com o n√∫mero de lan√ßamentos por m√™s, individualizando os meses
        fig_mes = px.bar(df['Date'].dt.month.value_counts().sort_index(), 
                        x=df['Date'].dt.month.value_counts().sort_index().index, 
                        y=df['Date'].dt.month.value_counts().sort_index().values,
                        labels={'x': 'M√™s', 'y': 'N√∫mero de Lan√ßamentos'})
        fig_mes.update_layout(xaxis_title='M√™s', yaxis_title='N√∫mero de Lan√ßamentos')
        fig_mes.update_xaxes(tickvals=np.arange(1, 13), 
                             ticktext=['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 
                                       'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'])
        fig_mes.update_traces(marker=dict(line=dict(width=1, color='DarkSlateGrey')))
        st.plotly_chart(fig_mes, use_container_width=True)

        with st.expander("An√°lise do Gr√°fico", expanded=False, icon=":material/info:"):
            st.caption(f"{grafico3}")
    

        st.markdown("---")
        st.subheader("üìÖ Miss√µes espaciais por dia da semana")

        # Gr√°fico com o n√∫mero de lan√ßamentos por dia da semana, individualizando os dias
        fig_dia = px.bar(df['Weekday'].value_counts().sort_index(), 
                        x=df['Weekday'].value_counts().sort_index().index, 
                        y=df['Weekday'].value_counts().sort_index().values, 
                        labels={'x': 'Dia da Semana', 'y': 'N√∫mero de Lan√ßamentos'})
        fig_dia.update_layout(xaxis_title='Dia da Semana', yaxis_title='N√∫mero de Lan√ßamentos')
        fig_dia.update_traces(marker=dict(line=dict(width=1, color='DarkSlateGrey')))
        fig_dia.update_xaxes(tickvals=['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'], 
                            ticktext=['Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'S√°b', 'Dom'])
        fig_dia.update_xaxes(categoryorder='array', categoryarray=['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'])
        st.plotly_chart(fig_dia, use_container_width=True)

        with st.expander("An√°lise do Gr√°fico", expanded=False, icon=":material/info:"):
            st.caption(f"{grafico4}")


    with tab3:
        st.subheader("üè¶ Miss√µes Espaciais por Empresa")
        
        # Gr√°fico de barras com o n√∫mero de miss√µes por empresa
        company_counts = df['Company Name'].value_counts().reset_index()
        company_counts.columns = ['Company Name', 'Mission Count']
        
        fig = px.bar(company_counts, x='Company Name', y='Mission Count', color='Mission Count',
                    text='Mission Count')
        fig.update_layout(xaxis_title='Empresa', yaxis_title='N√∫mero de Miss√µes')
        st.plotly_chart(fig, use_container_width=True)

        with st.expander("Informa√ß√µes sobre as Empresas", expanded=False, icon=":material/info:"):
            st.caption(f"{grafico5}")


    with tab4:
        st.subheader("‚≠ê Miss√µes Espaciais por Status")
        
        col1, col2 = st.columns(2)
        with col1:
            with st.container(border=True):
                st.metric(label="Miss√µes com sucesso", value=df[df['Mission Status'] == 'Success'].shape[0])
        with col2:
            with st.container(border=True):
                st.metric(label="Miss√µes com falha", value=df[df['Mission Status'] == 'Failure'].shape[0])
        # Gr√°fico de pizza
        mission_status_counts = df['Mission Status'].value_counts().reset_index()
        mission_status_counts.columns = ['Mission Status', 'Count']
        fig = px.pie(mission_status_counts, values='Count', names='Mission Status')
        fig.update_traces(textposition='inside', textinfo='percent+label')
        fig.update_layout(showlegend=False)
        st.plotly_chart(fig, use_container_width=True)

        with st.expander("Informa√ß√µes sobre o Status das Miss√µes", expanded=False, icon=":material/info:"):
            st.caption(f"{grafico6}")


        st.markdown("---")
        st.subheader("‚≠ê Raz√£o de Sucesso das Miss√µes Espaciais")

        col1, col2 = st.columns(2)
        with col1:
            with st.container(border=True):
                ano_sucesso = df.groupby(df['Date'].dt.year)['Mission Status'].value_counts(normalize=True).unstack().fillna(0)
                ano_sucesso['Success Ratio'] = ano_sucesso['Success'] / (ano_sucesso['Success'] + ano_sucesso['Failure'])
                ano_sucesso = ano_sucesso.sort_values(by='Success Ratio', ascending=False)
                st.metric(label="Ano com maior raz√£o de sucesso", value=ano_sucesso.index[0], 
                          delta=f"{ano_sucesso['Success Ratio'].iloc[0]:.2%}")
        with col2:
            with st.container(border=True):
                ano_falha = ano_sucesso.sort_values(by='Success Ratio', ascending=True)
                st.metric(label="Ano com menor raz√£o de sucesso", value=ano_falha.index[0], 
                            delta=f"-{ano_falha['Success Ratio'].iloc[0]:.2%}")
                
        # Gr√°fico de linha com a taxa de sucesso ao longo dos anos
        fig_sucesso_ano = px.line(
            ano_sucesso.sort_index(),
            x=ano_sucesso.sort_index().index,
            y='Success Ratio',
            title='Raz√£o de Sucesso das Miss√µes Espaciais ao Longo dos Anos',
            labels={'x': 'Ano', 'Success Ratio': 'Raz√£o de Sucesso'}
        )
        fig_sucesso_ano.update_layout(xaxis_title='Ano', yaxis_title='Taxa de Sucesso')
        fig_sucesso_ano.update_traces(line=dict(color='blue', width=2)) 
        st.plotly_chart(fig_sucesso_ano, use_container_width=True)

        with st.expander("An√°lise do Gr√°fico", expanded=False, icon=":material/info:"):
            st.caption(f"{grafico7}")


        st.markdown("---")
        st.subheader("‚≠ê Rela√ß√£o entre Lan√ßamentos e Sucesso das Miss√µes Espaciais")
        
        lancamentos_ano_status = (
            df.groupby([df['Date'].dt.year, 'Mission Status'])
            .size()
            .reset_index(name='Quantidade')
            .rename(columns={'Date': 'Ano'})
        )
        lancamentos_ano_status.rename(columns={'Date': 'Ano'}, inplace=True)
        lancamentos_ano_status['Ano'] = lancamentos_ano_status['Ano'].astype(int)

        # Gr√°fico de barras agrupadas por ano e status da miss√£o com cores customizadas
        color_map = {'Failure': 'red', 'Success': 'green'}
        fig_status_missao = px.line(
            lancamentos_ano_status,
            x='Ano',
            y='Quantidade',
            color='Mission Status',
            color_discrete_map=color_map,
            markers=True,
            labels={'Ano': 'Ano', 'Quantidade': 'N√∫mero de Lan√ßamentos', 'Mission Status': 'Status da Miss√£o'}
        )
        fig_status_missao.update_layout(
            xaxis_title='Ano',
            yaxis_title='N√∫mero de Lan√ßamentos',
            xaxis_tickangle=90,
            xaxis=dict(tickmode='linear')
        )
        fig_status_missao.update_traces(line=dict(width=2), marker=dict(size=8, line=dict(width=1, color='DarkSlateGrey')))
        st.plotly_chart(fig_status_missao, use_container_width=True)

        with st.expander("An√°lise do Gr√°fico", expanded=False, icon=":material/info:"):
            st.caption(f"{grafico8}")


        st.markdown("---")
        st.subheader("‚≠ê Top 10 Pa√≠ses com Mais Lan√ßamentos Bem-Sucedidos")


        # Localidades com mais lan√ßamentos bem-sucedidos
        lancamentos_sucesso = df[df['Mission Status'] == 'Success']['Country'].value_counts().head(10)
        # Gr√°fico de barras com os 10 pa√≠ses com mais lan√ßamentos bem-sucedidos
        fig_sucesso_pais = px.bar(
            lancamentos_sucesso,
            x=lancamentos_sucesso.index,
            y=lancamentos_sucesso.values,
            labels={'x': 'Pa√≠s', 'y': 'Quantidade de Lan√ßamentos Bem-Sucedidos'}
        )
        fig_sucesso_pais.update_layout(
            xaxis_title='Pa√≠s',
            yaxis_title='Quantidade de Lan√ßamentos Bem-Sucedidos'
        )
        fig_sucesso_pais.update_traces(texttemplate='%{y}', textposition='outside')
        fig_sucesso_pais.update_xaxes(tickangle=45)
        fig_sucesso_pais.update_traces(marker=dict(line=dict(width=1, color='DarkSlateGrey')))
        st.plotly_chart(fig_sucesso_pais, use_container_width=True)

        with st.expander("An√°lise do Gr√°fico", expanded=False, icon=":material/info:"):
            st.caption(f"{grafico9}")


        st.markdown("---")
        st.subheader("‚≠ê Status das Miss√µes Espaciais por Pa√≠s")

        lancamentos_pais_status = df.groupby(['Country', 'Mission Status']).size().reset_index(name='Quantidade')
        lancamentos_pais_status = lancamentos_pais_status.sort_values(by='Quantidade', ascending=False)
        lancamentos_pais_status = lancamentos_pais_status.head(10)

        # Cria um gr√°fico de barras empilhadas para visualizar o status das miss√µes por pa√≠s
        fig_pais_status = px.bar(
            lancamentos_pais_status,
            x='Country',
            y='Quantidade',
            color='Mission Status',
            title='Status das Miss√µes por Pa√≠s',
            labels={'Country': 'Pa√≠s', 'Quantidade': 'N√∫mero de Lan√ßamentos', 'Mission Status': 'Status da Miss√£o'},
            color_discrete_map={'Success': 'green', 'Failure': 'red'}
        )
        fig_pais_status.update_layout(
            xaxis_title='Pa√≠s',
            yaxis_title='N√∫mero de Lan√ßamentos',
            xaxis_tickangle=45,
            barmode='stack'
        )
        fig_pais_status.update_traces(texttemplate='%{y}', textposition='outside')
        fig_pais_status.update_xaxes(tickangle=45)
        fig_pais_status.update_traces(marker=dict(line=dict(width=1, color='DarkSlateGrey')))
        st.plotly_chart(fig_pais_status, use_container_width=True)

        with st.expander("An√°lise do Gr√°fico", expanded=False, icon=":material/info:"):
            st.caption(f"{grafico10}")


    with tab5:
        st.subheader("üöÄ Situa√ß√£o dos Foguetes em 2020")
        df['Status Rocket'] = df['Status Rocket'].str.replace('Status', '', regex=False)

        # Gr√°fico de pizza com StatusRocket
        fig_status_rocket = px.pie(
            df,
            names='Status Rocket',
            color='Status Rocket',
            color_discrete_map={
                'Active': 'blue',
                'Retired': 'gray',
                'Destroyed': 'red'
            }
        )
        fig_status_rocket.update_traces(textposition='inside', textinfo='percent+label')
        fig_status_rocket.update_layout(showlegend=False)
        st.plotly_chart(fig_status_rocket, use_container_width=True)

        with st.expander("Informa√ß√µes sobre os Foguetes", expanded=False, icon=":material/info:"):
            st.caption(f"{grafico11}")


        st.markdown("---")
        st.subheader("üöÄ Top 10 Pa√≠ses com mais Foguetes Ativos em 2020")

        # Gr√°fico de barras com o n√∫mero de foguetes ativos por pa√≠s
        fig_ativos_pais = px.bar(
            df[df['Status Rocket'] == 'Active']['Country'].value_counts().head(10),
            x=df[df['Status Rocket'] == 'Active']['Country'].value_counts().head(10).index,
            y=df[df['Status Rocket'] == 'Active']['Country'].value_counts().head(10).values,
            title='Top 10 Pa√≠ses com mais Foguetes Ativos',
            labels={'x': 'Pa√≠s', 'y': 'N√∫mero de Foguetes Ativos'}
        )
        fig_ativos_pais.update_layout(
            xaxis_title='Pa√≠s',
            yaxis_title='N√∫mero de Foguetes Ativos',
        )
        fig_ativos_pais.update_traces(texttemplate='%{y}', textposition='outside')
        fig_ativos_pais.update_xaxes(tickangle=45)
        fig_ativos_pais.update_traces(marker=dict(line=dict(width=1, color='DarkSlateGrey')))
        st.plotly_chart(fig_ativos_pais, use_container_width=True)

        with st.expander("An√°lise do Gr√°fico", expanded=False, icon=":material/info:"):
            st.caption(f"{grafico12}")


        st.markdown("---")
        st.subheader("üöÄ Top 10 Pa√≠ses com mais Foguetes Aposentados em 2020")

        # Gr√°fico de barras com o n√∫mero de foguetes aposentados por pa√≠s
        fig_aposentados_pais = px.bar(
            df[df['Status Rocket'] == 'Retired']['Country'].value_counts().head(10),
            x=df[df['Status Rocket'] == 'Retired']['Country'].value_counts().head(10).index,
            y=df[df['Status Rocket'] == 'Retired']['Country'].value_counts().head(10).values,
            title='Top 10 Pa√≠ses com mais Foguetes Aposentados',
            labels={'x': 'Pa√≠s', 'y': 'N√∫mero de Foguetes Aposentados'}
        )
        fig_aposentados_pais.update_layout(
            xaxis_title='Pa√≠s',
            yaxis_title='N√∫mero de Foguetes Aposentados',
        )   
        fig_aposentados_pais.update_traces(texttemplate='%{y}', textposition='outside')
        fig_aposentados_pais.update_xaxes(tickangle=45)
        fig_aposentados_pais.update_traces(marker=dict(line=dict(width=1, color='DarkSlateGrey')))
        st.plotly_chart(fig_aposentados_pais, use_container_width=True)

        with st.expander("An√°lise do Gr√°fico", expanded=False, icon=":material/info:"):
            st.caption(f"{grafico13}")


    with tab6:
        st.subheader("ü§ë Custo M√©dio das Miss√µes Espaciais por Pa√≠s")
        # Gr√°fico de barras com o custo m√©dio por pais
        fig_cost_country = px.bar(
            df.groupby('Country')['Mission Cost'].mean().sort_values(ascending=False).head(10),
            x=df.groupby('Country')['Mission Cost'].mean().sort_values(ascending=False).head(10).index,
            y=df.groupby('Country')['Mission Cost'].mean().sort_values(ascending=False).head(10).values,
            labels={'x': 'Pa√≠s', 'y': 'Custo M√©dio da Miss√£o (USD)'}
        )
        fig_cost_country.update_layout(
            xaxis_title='Pa√≠s',
            yaxis_title='Custo M√©dio da Miss√£o (USD)',
            yaxis_tickprefix='$',
            yaxis_tickformat=','
        )
        fig_cost_country.update_traces(texttemplate='%{y:.2f}', textposition='outside')
        fig_cost_country.update_xaxes(tickangle=45)
        fig_cost_country.update_traces(marker=dict(line=dict(width=1, color='DarkSlateGrey')))
        st.plotly_chart(fig_cost_country, use_container_width=True)

        with st.expander("An√°lise do Gr√°fico", expanded=False, icon=":material/info:"):
            st.caption(f"{grafico14}")


        st.markdown("---") 
        st.subheader("ü§ë Custo M√©dio das Miss√µes Espaciais por Empresa")

        # Gr√°fico de barras com o custo m√©dio das miss√µes espaciais por empresa
        fig_mission_cost = px.bar(
            df.groupby('Company Name')['Mission Cost'].mean().sort_values(ascending=False).head(10),
            x=df.groupby('Company Name')['Mission Cost'].mean().sort_values(ascending=False).head(10).index,
            y=df.groupby('Company Name')['Mission Cost'].mean().sort_values(ascending=False).head(10).values,
            labels={'x': 'Empresa', 'y': 'Custo M√©dio da Miss√£o (USD)'}
        )
        fig_mission_cost.update_layout(
            xaxis_title='Empresa',
            yaxis_title='Custo M√©dio da Miss√£o (USD)',
            yaxis_tickprefix='$',
            yaxis_tickformat=','
        )
        fig_mission_cost.update_traces(texttemplate='%{y:.2f}', textposition='outside')
        fig_mission_cost.update_xaxes(tickangle=45)
        fig_mission_cost.update_traces(marker=dict(line=dict(width=1, color='DarkSlateGrey')))
        st.plotly_chart(fig_mission_cost, use_container_width=True)

        with st.expander("An√°lise do Gr√°fico", expanded=False, icon=":material/info:"):
            st.caption(f"{grafico15}")
        